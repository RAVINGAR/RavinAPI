allprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'pmd'
    apply plugin: 'maven-publish'

    group 'com.ravingarinc.api'
    version '1.4.4'

    repositories {
        gradlePluginPortal()
        mavenCentral()

        maven {
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }
        maven {
            url = ("https://repo.papermc.io/repository/maven-public/")
        }
    }
    dependencies {
        compileOnly 'org.jetbrains:annotations:23.0.0'
        compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
        // Todo, if this is 1.18.2, whats the point of supporting older versions?
    }
}

subprojects {
    sourceCompatibility = 17
    targetCompatibility = 17

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }


    pmd {
        consoleOutput = true
        toolVersion = '6.41.0'
        rulesMinimumPriority = 5
        ruleSets = []
        ruleSetFiles = files("$rootDir/pmd-rules.xml")
    }

    javadoc {
        options.encoding 'UTF-8'
        options.charSet 'UTF-8'
        options.jFlags('-Xms256m', '-Xmx512m')
        options.addStringOption('Xdoclint:none', '-quiet')
        options.links(
                'https://hub.spigotmc.org/javadocs/spigot/'
        )
    }

    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
            }
        }
    }

    tasks.withType(PublishToMavenLocal).configureEach {
        onlyIf {
            (publication == publishing.publications.maven && publication.artifactId != 'localtest')
        }
    }

    tasks.withType(PublishToMavenRepository).configureEach {
        onlyIf {
            (publication == publishing.publications.maven && publication.artifactId != 'localtest')
        }
    }
}

